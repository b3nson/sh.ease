#!/bin/bash

SHEASE=../easing.sh
source $SHEASE

SVG=cheatsheet.svg
fCOUNT=0

pwidth=595
pheight=1500

ygap=8
xgap=1

gwidth=$(( pwidth / 3 ))
gheight=$(( (pheight / 11) -ygap))



  echo "<?xml version=\"1.0\" standalone=\"no\"?>" > $SVG
  echo "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">" >> $SVG
  echo "<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"${pwidth}px\" height=\"$((pheight+20))px\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">" >> $SVG
  echo "<title>sh.ease cheat sheet</title>" >> $SVG
  echo "<desc>penner easing equations for bash - example</desc>" >> $SVG
  echo "<defs><style type=\"text/css\"><![CDATA[text {font-family:Helvetica,Arial,Verdana,sans-serif;font-size:9px;}]]></style></defs>" >> $SVG
  
  echo "<rect x=\"0\" y=\"0\" width=\"$pwidth\" height=\"$((pheight+20))\" fill=\"#fff\" stroke=\"none\" />" >> $SVG
  
  echo "<g id=\"headline\" transform=\"translate(0, 14)\">" >> $SVG
  echo "<text x=\"28\" y=\"40\" style=\"font-size:40px; font-weight:bold;\">sh.ease</text>" >> $SVG
  echo "<text x=\"182\" y=\"40\" style=\"font-size:12px; font-weight:bold;\">CHEAT SHEET</text>" >> $SVG
  echo "<text x=\"30\" y=\"52\" style=\"font-size:11px;\"> Robert Penner's handy easing equations for bash</text>" >> $SVG  
  echo "<line x1=\"30\" y1=\"60\" x2=\"$((pwidth-30))\" y2=\"60\" style=\"stroke:black; stroke-width:1px;\" />" >> $SVG
  echo "</g>" >> $SVG
  
  echo "<g id=\"graphs\" transform=\"translate($((pwidth/2)), $((pheight/2))) scale( .9 ) translate($((-pwidth/2)), $((-pheight/2)))\">" >> $SVG
  
  for FUNC in `grep "^function.*{$" $SHEASE | \
	    sed 's/function //g' | \
	    sed 's/ {//g' | \
	    grep _ease` # | egrep "bounce|quad|quint"` 
  do
    echo "<g id=\"$FUNC\" transform=\"translate( $((gwidth * (fCOUNT % 3)  )), $((gheight*(fCOUNT / 3) + ygap*(fCOUNT / 3) +20 )) )\">" >> $SVG
    echo "<text x=\"$((xgap/2))\" y=\"-3\" style=\"font-style:italic;\">$FUNC</text>" >> $SVG
    echo "<rect x=\"$((xgap/2))\" y=\"0\" width=\"$(( gwidth-(xgap) ))\" height=\"$((gheight-ygap))\" fill=\"#eee\" opacity=\".7\" stroke=\"none\" />" >> $SVG
    echo "<path style=\"fill:none;stroke:#0088ff;stroke-width:1px; \
	  stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\" d=\"M " | tr -s ' ' >> $SVG
    
    
    for (( x=0; x<=$(( gwidth-xgap )); x+=4 ))
    do
      GRAPH="$GRAPH $((x+xgap/2)) "`$FUNC $((x)) $((gheight-ygap)) -$((gheight-ygap)) $(( gwidth-xgap )) | awk '{printf("%.2f\n", $1)}'` 
    done
    
    echo $GRAPH | fold -s -w 200 >> $SVG
    GRAPH=""
    echo "\"/>" >> $SVG
    echo "</g>" >> $SVG

    fCOUNT=$((fCOUNT+1))
  done
 
  echo "</g>" >> $SVG
  
  echo "<g id=\"footer\" transform=\"translate($((pwidth/2)), $((pheight/2))) scale( .9 ) translate($((-pwidth/2)), $((-pheight/2))) translate(0, $((pheight+20)))\">" >> $SVG
  echo "<line x1=\"0\" y1=\"-5\" x2=\"$((pwidth))\" y2=\"-5\" style=\"stroke:#000; stroke-width:1px;\" />" >> $SVG  
  echo "<rect x=\"0\" y=\"6\" width=\"$(( pwidth ))\" height=\"60\" fill=\"#ccc\" opacity=\".7\" stroke=\"none\" />" >> $SVG
  echo "<text x=\"30\" y=\"28\" style=\"font-size:11px;\">Download, usage and examples on <tspan style=\"font-weight:bold;\">http://github.com/b3nson/sh.ease</tspan></text>" >> $SVG  
  echo "<text x=\"30\" y=\"40\" style=\"font-size:11px;\">This sheet was generated by the shellscript \"svg.sh\", which can be found in the examples-directory</text>" >> $SVG
  echo "</g>" >> $SVG  
  
  echo "</svg>" >> $SVG
  
  
  display $SVG
